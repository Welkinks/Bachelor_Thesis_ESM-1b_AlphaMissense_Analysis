---
title: "Visualisation"
format: html
execute:
  echo: true
---



```{r}
#Load ggplot2
install.packages("ggplot2")
install.packages("ggbeeswarm")
install.packages("dplyr")
library(ggplot2)
library(ggbeeswarm)
library(dplyr)

```


## Load Data

```{r}
df <- read.csv("/Users/doma/Documents/Bachelor_Arbeit/Code/results/csv/Human_N_Out_Proteome_TMD_pathogenicity.csv")
head(df)
colnames(df)


sum(is.na(df$avg_pathogenicity_40AA_ESM1b))
df <- df %>% filter(!is.na(avg_pathogenicity_40AA_ESM1b))
```












```{r}

# Ensure the x-axis is ordered correctly
df$pred_class <- factor(df$pred_class, levels = c("HC substrate", "LC substrate", "LC non-substrate", "HC non-substrate"))

# Calculate means and standard deviations for each group
summary_stats <- df %>%
  group_by(pred_class) %>%
  summarise(
    mean_value = mean(`avg_pathogenicity_40AA_ESM1b`, na.rm = TRUE),
    sd_value = sd(`avg_pathogenicity_40AA_ESM1b`, na.rm = TRUE)
  )

# Create the plot
ggplot(df, aes(x = pred_class, y = `avg_pathogenicity_40AA_ESM1b`, fill = pred_class)) +
  geom_violin(trim = FALSE, alpha = 0.7, color = "black") +
  geom_quasirandom(size = 1.5, color = "black", alpha = 0.8) +
  geom_point(data = summary_stats, aes(x = pred_class, y = mean_value), 
             color = "red", size = 3, shape = 18) +
  geom_errorbar(data = summary_stats, aes(x = pred_class, ymin = mean_value - sd_value, ymax = mean_value + sd_value), 
              width = 0.2, color = "red", linewidth = 0.8), 
                width = 0.2, color = "red", linewidth = 0.8) +  # Use mean_value and sd_value
  scale_fill_brewer(palette = "Set2") +
  labs(
    title = "Distribution of Pathogenicity by Prediction Class",
    x = "Prediction Class",
    y = "Average Pathogenicity (40AA ESM1b)"
  ) +
  theme_minimal(base_size = 16) +
  theme(
    legend.position = "none",
    plot.title = element_text(hjust = 0.5, face = "bold", size = 18),
    axis.text = element_text(color = "black", size = 14),
    axis.title = element_text(face = "bold", size = 16),
    plot.margin = margin(10, 10, 10, 10),
    aspect.ratio = 0.5
  )


```



```{r}
# Ensure the x-axis is ordered correctly
df$pred_class <- factor(df$pred_class, levels = c("HC substrate", "LC substrate", "LC non-substrate", "HC non-substrate"))

# Calculate means and standard deviations for each group
summary_stats <- df %>%
  group_by(pred_class) %>%
  summarise(
    mean_value = mean(`avg_pathogenicity_40AA_ESM1b`, na.rm = TRUE),
    sd_value = sd(`avg_pathogenicity_40AA_ESM1b`, na.rm = TRUE)
  )

# Create the plot
ggplot(df, aes(x = pred_class, y = `avg_pathogenicity_40AA_ESM1b`, fill = pred_class)) +
  geom_violin(trim = FALSE, alpha = 0.7, color = "black") +
  geom_quasirandom(size = 1.5, color = "black", alpha = 0.8) +
  geom_point(data = summary_stats, aes(x = pred_class, y = mean_value), 
             color = "red", size = 3, shape = 18) +
  geom_errorbar(data = summary_stats, aes(x = pred_class, ymin = mean_value - sd_value, ymax = mean_value + sd_value), 
                width = 0.2, color = "red", linewidth = 0.8) +  # Fixed syntax
  scale_fill_brewer(palette = "Set2") +
  labs(
    title = "Distribution of Pathogenicity by Prediction Class",
    x = "Prediction Class",
    y = "Average Pathogenicity (40AA ESM1b)"
  ) +
  theme_minimal(base_size = 16) +
  theme(
    legend.position = "none",
    plot.title = element_text(hjust = 0.5, face = "bold", size = 18),
    axis.text = element_text(color = "black", size = 14),
    axis.title = element_text(face = "bold", size = 16),
    plot.margin = margin(10, 10, 10, 10),
    aspect.ratio = 0.5
  )
```